<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LLM Router - Dynamic LLM Router</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Space+Grotesk:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
    :root {
    --bg-primary: #0d0d1a; 
    --bg-secondary: #15152b; 
    --bg-tertiary: #1e1e36; 
    --bg-card: #21213f; 
    --text-primary: #e0e6f0; 
    --text-secondary: #b0b8c8; 
    --text-muted: #7a8298; 
    --accent-primary: #00d4ff; 
    --accent-secondary: #6b48ff; 
    --accent-gradient: linear-gradient(135deg, #6b48ff 0%, #00d4ff 50%, #a3e4ff 100%);
    --border-color: #2e2e4d;
    --border-accent: rgba(0, 212, 255, 0.15);
    --shadow-primary: 0 4px 20px rgba(107, 72, 255, 0.1);
    --shadow-accent: 0 0 30px rgba(0, 212, 255, 0.1);
    --glass-bg: rgba(33, 33, 63, 0.85);
    --glass-border: rgba(0, 212, 255, 0.1);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    background: var(--bg-primary);
    min-height: 100vh;
    color: var(--text-primary);
    overflow-x: hidden;
    position: relative;
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
        radial-gradient(circle at 1px 1px, rgba(0, 212, 255, 0.02) 1px, transparent 0);
    background-size: 40px 40px;
    pointer-events: none;
    z-index: -1;
}

.bg-orbs {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    z-index: -1;
}

.orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(80px);
    animation: float 8s ease-in-out infinite;
}

.orb:nth-child(1) {
    width: 400px;
    height: 400px;
    background: radial-gradient(circle, rgba(107, 72, 255, 0.08) 0%, transparent 70%);
    top: 20%;
    left: 10%;
    animation-delay: 0s;
}

.orb:nth-child(2) {
    width: 300px;
    height: 300px;
    background: radial-gradient(circle, rgba(0, 212, 255, 0.06) 0%, transparent 70%);
    top: 60%;
    right: 20%;
    animation-delay: -3s;
}

.orb:nth-child(3) {
    width: 250px;
    height: 250px;
    background: radial-gradient(circle, rgba(163, 228, 255, 0.04) 0%, transparent 70%);
    bottom: 30%;
    left: 60%;
    animation-delay: -6s;
}

@keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    33% { transform: translateY(-30px) rotate(120deg); }
    66% { transform: translateY(15px) rotate(240deg); }
}

.app-container {
    display: flex;
    height: 100vh;
    position: relative;
    z-index: 1;
}

.sidebar {
    width: 80px;
    background: var(--bg-secondary);
    border-right: 1px solid var(--border-color);
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 24px 0;
    position: relative;
}

.sidebar::after {
    content: '';
    position: absolute;
    top: 20%;
    right: 0;
    width: 1px;
    height: 60%;
    background: linear-gradient(180deg, transparent 0%, var(--accent-primary) 50%, transparent 100%);
    opacity: 0.3;
}

.logo {
    margin-bottom: 48px;
    position: relative;
}

.logo-icon {
    width: 44px;
    height: 44px;
    background: var(--accent-gradient);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    color: white;
    box-shadow: var(--shadow-primary);
    transition: all 0.3s ease;
}

.logo-icon:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-accent);
}

.nav-items {
    display: flex;
    flex-direction: column;
    gap: 16px;
    flex: 1;
}

.nav-item {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: transparent;
    border: 1px solid transparent;
    color: var(--text-muted);
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
}

.nav-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--glass-bg);
    opacity: 0;
    transition: opacity 0.3s ease;
    border-radius: 12px;
}

.nav-item:hover,
.nav-item.active {
    color: var(--accent-primary);
    border-color: var(--border-accent);
    transform: translateY(-1px);
}

.nav-item:hover::before,
.nav-item.active::before {
    opacity: 1;
}

.nav-item.active {
    color: var(--accent-primary);
    background: rgba(0, 212, 255, 0.05);
    border-color: var(--accent-primary);
}

.main-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    position: relative;
}

.header {
    padding: 16px 24px;
    background: var(--bg-secondary);
    border-bottom: 1px solid var(--border-color);
    position: relative;
}

.header::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 24px;
    right: 24px;
    height: 1px;
    background: linear-gradient(90deg, transparent, var(--accent-primary), transparent);
    opacity: 0.3;
}

.header-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.header-title {
    display: flex;
    align-items: center;
    gap: 8px;
}

.brand-name {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 1.5rem;
    font-weight: 700;
    background: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    letter-spacing: 0.5px;
}

.header-actions {
    display: flex;
    gap: 12px;
    align-items: center;
}

.status-indicator {
    display: flex;
    align-items: center;
    gap: 6px;
    padding: 6px 12px;
    background: var(--glass-bg);
    border: 1px solid var(--glass-border);
    border-radius: 20px;
    font-size: 0.75rem;
    backdrop-filter: blur(20px);
    font-weight: 500;
}

.status-dot {
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background: var(--accent-primary);
    box-shadow: 0 0 10px var(--accent-primary);
    animation: statusPulse 2s infinite;
}

@keyframes statusPulse {
    0%, 100% { opacity: 1; transform: scale(1); }
    50% { opacity: 0.6; transform: scale(1.1); }
}

.chat-container {
    flex: 1;
    display: flex;
    flex-direction: column;
    padding: 24px 40px;
    overflow: hidden;
}

.chat-window {
    flex: 1;
    background: #00020b; /* Dark black background */
    border: 1px solid var(--border-color);
    border-radius: 16px;
    padding: 4px;
    overflow-y: auto;
    margin-bottom: 24px;
    position: relative;
}

.chat-window::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent, var(--accent-primary), transparent);
    opacity: 0.2;
}

.conversation-area {
    min-height: 70%;
    display: flex;
    flex-direction: column;
}

.message {
    display: flex;
    align-items: flex-start;
    gap: 16px;
    margin-bottom: 100px;
    animation: messageSlide 0.6s ease-out;
}

@keyframes messageSlide {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

.message.user {
    flex-direction: row-reverse;
}

.message-avatar {
    width: 40px;
    height: 40px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 16px;
    flex-shrink: 0;
    position: relative;
}

.message.user .message-avatar {
    background: var(--accent-gradient);
    color: white;
    box-shadow: var(--shadow-primary);
}

.message.assistant .message-avatar {
    background: linear-gradient(135deg, var(--bg-tertiary) 0%, var(--bg-secondary) 100%);
    color: var(--accent-primary);
    border: 1px solid var(--border-accent);
}

.message-contrast {
    background: #1a1a1a; /* Slightly lighter than chat-window for contrast */
    border: 1px solid var(--border-color);
    border-radius: 16px;
    padding: 20px 24px;
    max-width: 75%;
}

.message.user .message-contrast {
    background: linear-gradient(135deg, rgba(107, 72, 255, 0.1) 0%, rgba(0, 212, 255, 0.05) 100%);
    border-color: rgba(107, 72, 255, 0.2);
    border-bottom-right-radius: 4px;
}

.message.assistant .message-contrast {
    border-bottom-left-radius: 4px;
}

.message-text {
    font-size: 0.95rem;
    line-height: 1.6;
    color: var(--text-secondary);
    white-space: pre-wrap;
    word-wrap: break-word;
    word-break: break-word; /* new */
}

.model-info {
    margin-top: 16px;
    padding: 12px 16px;
    background: rgba(0, 0, 0, 0.2);
    border-radius: 8px;
    font-size: 0.8rem;
    border: 1px solid rgba(0, 212, 255, 0.1);
    display: inline-block;
}

.model-name {
    color: var(--accent-primary);
    font-weight: 600;
    margin-right: 12px;
}

.model-stats {
    color: var(--text-muted);
}

.timestamp {
    font-size: 0.75rem;
    color: var(--text-muted);
    margin-top: 8px;
    opacity: 0.7;
}

.empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    text-align: center;
    color: var(--text-muted);
}

.empty-icon {
    width: 100%;
    height: 100%;
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
}

.empty-icon img {
    width: auto;
    height: 700%;
    max-width: 100%;
    object-fit: contain;
    display: block;
}

@keyframes emptyIconFloat {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-8px); }
}

.empty-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 12px;
    font-family: 'Space Grotesk', sans-serif;
}

.empty-subtitle {
    font-size: 1rem;
    opacity: 0.8;
    max-width: 480px;
    line-height: 1.5;
}

.input-container {
    position: relative;
}

.input-wrapper {
    background: var(--bg-card);
    border: 1px solid var(--border-color);
    border-radius: 16px;
    padding: 8px;
    transition: all 0.3s ease;
    position: relative;
}

.input-wrapper:focus-within {
    border-color: var(--accent-primary);
    box-shadow: 0 0 0 3px rgba(0, 212, 255, 0.1);
}

.input-form {
    display: flex;
    align-items: center;
    gap: 12px;
}

.message-input {
    flex: 1;
    background: transparent;
    border: none;
    outline: none;
    padding: 16px 20px;
    font-size: 1rem;
    color: var(--text-primary);
    font-family: inherit;
    resize: none;
    max-height: 120px;
    min-height: 52px;
}

.message-input::placeholder {
    color: var(--text-muted);
    opacity: 0.7;
}

.send-button {
    width: 52px;
    height: 52px;
    background: var(--accent-gradient);
    border: none;
    border-radius: 12px;
    color: white;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
    transition: all 0.3s ease;
    box-shadow: var(--shadow-primary);
    position: relative;
    overflow: hidden;
}

.send-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.2) 0%, transparent 100%);
    opacity: 0;
    transition: opacity 0.3s;
}

.send-button:hover {
   transform: translateY(-2px);
    box-shadow: var(--shadow-accent);
}

.send-button:hover::before {
    opacity: 1;
}

.send-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
    box-shadow: var(--shadow-primary);
}

.send-button.loading {
    animation: buttonSpin 1s linear infinite;
}

@keyframes buttonSpin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.typing-indicator {
    display: none;
    align-items: center;
    gap: 12px;
    padding: 20px 0;
    color: var(--text-muted);
    font-style: italic;
}

.typing-dots {
    display: flex;
    gap: 4px;
}

.typing-dot {
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background: var(--accent-primary);
    animation: typingAnimation 1.4s infinite ease-in-out;
}

.typing-dot:nth-child(1) { animation-delay: -0.32s; }
.typing-dot:nth-child(2) { animation-delay: -0.16s; }
.typing-dot:nth-child(3) { animation-delay: 0s; }

@keyframes typingAnimation {
    0%, 80%, 100% {
        transform: scale(0);
        opacity: 0.5;
    }
    40% {
        transform: scale(1);
        opacity: 1;
    }
}

.chat-window::-webkit-scrollbar {
    width: 6px;
}

.chat-window::-webkit-scrollbar-track {
    background: var(--bg-tertiary);
    border-radius: 3px;
}

.chat-window::-webkit-scrollbar-thumb {
    background: var(--accent-primary);
    border-radius: 3px;
    opacity: 0.5;
}

.chat-window::-webkit-scrollbar-thumb:hover {
    opacity: 0.8;
}

@media (max-width: 1024px) {
    .sidebar {
        width: 70px;
    }
    
    .brand-name {
        font-size: 1.4rem;
    }
    
    .chat-container {
        padding: 20px 32px;
    }
}

@media (max-width: 768px) {
    .sidebar {
        width: 60px;
        padding: 16px 0;
    }
    
    .nav-item {
        width: 44px;
        height: 44px;
    }
    
    .header {
        padding: 16px 24px;
    }
    
    .brand-name {
        font-size: 1.2rem;
    }
    
    .chat-container {
        padding: 16px 24px;
    }
    
    .message-contrast {
        max-width: 85%;
    }
    
    .header-actions {
        display: none;
    }
}

@media (max-width: 480px) {
    .app-container {
        flex-direction: column;
    }
    
    .sidebar {
        width: 100%;
        height: 60px;
        flex-direction: row;
        justify-content: center;
        padding: 12px 20px;
    }
    
    .nav-items {
        flex-direction: row;
        gap: 16px;
        flex: none;
    }
    
    .logo {
        display: none;
    }
    
    .message-contrast {
        max-width: 95%;
    }
    
    .chat-container {
        padding: 16px 20px;
    }
}
</style>
</head>

<body>
    <div class="bg-orbs">
        <div class="orb"></div>
        <div class="orb"></div>
        <div class="orb"></div>
    </div>

    <div class="app-container">
        <!-- Sidebar Navigation -->
        <div class="sidebar">
            <div class="logo">
                <div class="logo-icon">
                    <i class="fas fa-brain"></i>
                </div>
            </div>
            
            <div class="nav-items">
                <div class="nav-item active" data-tooltip="Chat">
                    <i class="fas fa-comments"></i>
                </div>
                <div class="nav-item" data-tooltip="History">
                    <i class="fas fa-history"></i>
                </div>
                <div class="nav-item" data-tooltip="Settings">
                    <i class="fas fa-cog"></i>
                </div>
                <div class="nav-item" data-tooltip="Analytics">
                    <i class="fas fa-chart-line"></i>
                </div>
                <div class="nav-item" data-tooltip="Feedback">
                    <i class="fas fa-star"></i>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <div class="header">
                <div class="header-content">
                    <div class="header-title">
                        <div class="brand-name">LLM Router</div>
                    </div>
                    <div class="header-actions">
                        <div class="status-indicator">
                            <div class="status-dot"></div>
                            <span>ONLINE</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Chat Area -->
            <div class="chat-container">
                <div class="chat-window" id="chatWindow">
                    <div class="conversation-area" id="conversationArea">
                        <div class="empty-state" id="emptyState">
                            <div class="empty-icon">
                                <img src="https://cdn.dribbble.com/userupload/24102843/file/original-312073f1afffa8d99228bbdc09972821.gif" alt="LLM Router Animation">
                            </div>
                        </div>
                    </div>

                    <div class="typing-indicator" id="typingIndicator">
                        <i class="fas fa-robot"></i>
                        <span>AI is analyzing</span>
                        <div class="typing-dots">
                            <div class="typing-dot"></div>
                            <div class="typing-dot"></div>
                            <div class="typing-dot"></div>
                        </div>
                    </div>
                </div>

                <!-- Input Area -->
                <div class="input-container">
                    <div class="input-wrapper">
                        <form class="input-form" id="chatForm">
                            <textarea 
                                class="message-input" 
                                id="messageInput"
                                placeholder="Enter your message and let LLM Router route it intelligently..."
                                rows="1"
                                required
                            ></textarea>
                            <button type="submit" class="send-button" id="sendButton">
                                <i class="fas fa-paper-plane"></i>
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const messageInput = document.getElementById('messageInput');
  const chatForm = document.getElementById('chatForm');
  const sendButton = document.getElementById('sendButton');
  const conversationArea = document.getElementById('conversationArea');
  const typingIndicator = document.getElementById('typingIndicator');
  const chatWindow = document.getElementById('chatWindow');

  const mockModels = ['mistral', 'gemma3:12b'];

  function formatChunk(chunk) {
    return chunk
      .replace(/\n/g, '<br>')
      .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
      .replace(/`(.*?)`/g, '<code>$1</code>');
  }

  function appendStreamChunk(model, chunk, messageId) {
    let el = document.getElementById(messageId);
    if (!el) return;
    const streamText = el.querySelector('.stream-text');
    if (streamText) {
      streamText.innerHTML += formatChunk(chunk);
      chatWindow.scrollTop = chatWindow.scrollHeight;
    }
  }

  chatForm.addEventListener('submit', function (e) {
    e.preventDefault();
    const message = messageInput.value.trim();
    if (!message) return;

    // Show user's message
    const userDiv = document.createElement('div');
    userDiv.className = 'message user';
    userDiv.innerHTML = `
      <div class="message-avatar"><i class="fas fa-user"></i></div>
      <div class="message-contrast"><div class="message-text">${formatChunk(message)}</div></div>
      <div class="timestamp">${new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>
    `;
    conversationArea.appendChild(userDiv);

    // Mock AI response for each model
    const modelContainers = {};
    mockModels.forEach((model, index) => {
      const containerId = `stream-${model}-${Date.now()}`;
      modelContainers[model] = containerId;

      const assistantDiv = document.createElement('div');
      assistantDiv.className = 'message assistant';
      assistantDiv.id = containerId;
      assistantDiv.innerHTML = `
        <div class="message-avatar"><i class="fas fa-robot"></i></div>
        <div class="message-contrast">
          <div class="message-text">
            <div style="font-weight:600; color: var(--accent-primary); margin-bottom: 10px;">
              <i class="fas fa-microchip"></i> ${model.toUpperCase()}
            </div>
            <div class="stream-text">...</div>
            <div class="model-meta" style="margin-top: 12px; font-size: 0.8rem;"></div>
          </div>
        </div>
        <div class="timestamp">${new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>
      `;
      conversationArea.appendChild(assistantDiv);

      // Simulate streaming chunks
      setTimeout(() => appendStreamChunk(model, "Hello there! ", containerId), 1000 + index * 200);
      setTimeout(() => appendStreamChunk(model, "This is a mock response. ", containerId), 1500 + index * 200);
      setTimeout(() => appendStreamChunk(model, "Feel free to test the UI! 🤖", containerId), 2000 + index * 200);
      setTimeout(() => {
        const metaDiv = assistantDiv.querySelector('.model-meta');
        metaDiv.innerHTML = `
          <div class="model-info">
            <span><i class="fas fa-stopwatch"></i> 123ms</span> |
            <span><i class="fas fa-check-circle"></i> Accuracy: 100%</span> |
            <span><i class="fas fa-star"></i> Score: 99/100</span> |
            <span><i class="fas fa-coins"></i> Cost: $0.0001</span>
          </div>
        `;
        sendButton.disabled = false;
        sendButton.classList.remove('loading');
        typingIndicator.style.display = 'none';
      }, 2500 + index * 200);
    });

    // Reset input and show typing
    messageInput.value = '';
    messageInput.style.height = 'auto';
    sendButton.disabled = true;
    sendButton.classList.add('loading');
    typingIndicator.style.display = 'flex';

    chatWindow.scrollTop = chatWindow.scrollHeight;
  });
});
</script>


</body>
</html>